{"version":3,"sources":["components/RenderMenu/RenderMenu.js","sections/Header.js","components/CvCard/CvCard.js","components/SectionContainer/SectionContainer.js","sections/About.js","components/SkillRender/SkillRender.js","sections/Skills.js","components/Jobs/Jobs.js","sections/Jobs.js","components/Education/Education.js","sections/Educations.js","App.js","serviceWorker.js","index.js"],"names":["RenderMenu","className","class","menu","map","item","smooth","to","href","icon","title","Header","CvCard","src","alt","srcset","cvcard","subtitle","details","content","contact","SectionContainer","props","id","children","About","style","SkillRender","Tools","skills","Industry","Languages","Skills","Jobs","JobsList","jobs","img","imgAlt","jobTitle","location","startDate","endDate","moreLink","EducationList","education","majorTitle","degree","Educations","Education","App","useState","theme","setTheme","onClick","document","getElementById","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.779f3243.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./RenderMenu.css\";\r\nimport menu from \"./RenderMenu.json\";\r\nimport { BrowserRouter as Router, Switch, Route, Links } from \"react-router-dom\";\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\n\r\nconst RenderMenu = () => {\r\n  return (\r\n    <header className=\"zd-menu-container\">\r\n      <nav class=\"zd-story\">\r\n        <Router>\r\n          {menu.menu.map((item) => {\r\n            return (\r\n              <div class=\"zd-item-menu\">\r\n                <Link smooth to={item.href}>\r\n                  <span class=\"zd-icons\">\r\n                    <i class={item.icon}></i>\r\n                  </span>\r\n                  <span class=\"zd-menu-title\">{item.title}</span>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </Router>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default RenderMenu;\r\n","import React from \"react\";\r\nimport RenderMenu from \"./../components/RenderMenu/RenderMenu\";\r\n\r\nconst Header = () => {\r\n  return (\r\n      <RenderMenu />\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport cvcard from \"./cvcard.json\";\r\nimport \"./CvCard.css\";\r\n// import Alizeinalzadeh from './img/Alizeinalzadeh.jpg'\r\n\r\nconst CvCard = () => {\r\n  return (\r\n    <div className=\"zd-cv-card\">\r\n      <img src=\"img/Alizeinalzadeh.jpg\" alt=\"Ali Zeinalzadeh\" srcset=\"\" />\r\n      <h1>{cvcard.title}</h1>\r\n      <h3>{cvcard.subtitle}</h3>\r\n      <div className=\"zd-cv-card-contact\">\r\n        {cvcard.details.map((item) => {\r\n          return (\r\n            <div>\r\n              <i className={item.icon}></i>\r\n              <span>{item.content}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"zd-cv-card-social\">\r\n        {cvcard.contact.map((item) => {\r\n          return (\r\n            <a href={item.href} className={item.icon} title={item.title}></a>\r\n          );\r\n        })}\r\n      </div>\r\n      <button>Download Full Resume</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CvCard;\r\n","import React from \"react\";\r\nimport \"./SectionContainer.css\";\r\n\r\nconst SectionContainer = (props) => {\r\n  return (\r\n    <div id={props.id} className=\"zd-fullpage\">\r\n      <div className=\"zd-container\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"zd-center-content\">\r\n          <p>{props.children}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionContainer;\r\n","import React from \"react\";\r\nimport SectionContainer from \"./../components/SectionContainer/SectionContainer\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <SectionContainer id=\"about\" title=\"About\" style=\"margin-top: 0;\">\r\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Omnis minima\r\n      unde, incidunt iure eligendi provident accusamus soluta corporis ex cum,\r\n      rem excepturi veniam voluptate repudiandae error vel totam quo\r\n      consectetur!\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./SkillRender.css\";\r\nimport Tools from \"./Tools.json\";\r\nimport Languages from \"./Languages.json\";\r\nimport Industry from \"./Industry.json\";\r\n\r\nconst SkillRender = () => {\r\n  return (\r\n    <div class=\"znzd-skills\">\r\n      <div class=\"zd-skills-list\">\r\n        <h3>Tools & Technology</h3>\r\n        <div>\r\n          {Tools.skills.map((item) => {\r\n            return <span>{item.title}</span>;\r\n          })}\r\n        </div>\r\n        <h3>Industry Knowledge</h3>\r\n        <div>\r\n          {Industry.skills.map((item) => {\r\n            return <span>{item.title}</span>;\r\n          })}\r\n        </div>\r\n        <h3>Languages</h3>\r\n        <div>\r\n          {Languages.skills.map((item) => {\r\n            return <span>{item.title}</span>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillRender;\r\n","import React from \"react\";\r\nimport SectionContainer from \"./../components/SectionContainer/SectionContainer\";\r\nimport SkillRender from \"./../components/SkillRender/SkillRender\";\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <SectionContainer id=\"skills\" title=\"Skills\">\r\n      <SkillRender />\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport \"./Jobs.css\";\r\nimport JobsList from \"./Jobs.json\";\r\n\r\nconst Jobs = () => {\r\n  return (\r\n    <div class=\"zd-cards\">\r\n      {JobsList.jobs.map((item) => {\r\n        return (\r\n          <div class=\"zd-cards-items\">\r\n            <a href={item.href}>\r\n              <img src={item.img} alt={item.imgAlt} />\r\n            </a>\r\n            <h4>{item.jobTitle}</h4>\r\n            <div>\r\n              <i class=\"lni lni-pointer\"></i>\r\n              <span>{item.location}</span>\r\n            </div>\r\n            <div>\r\n              <i class=\"lni lni-calendar\"></i>\r\n              <span>\r\n                {item.startDate} - {item.endDate}{\" \"}\r\n              </span>\r\n            </div>\r\n            <a href={item.moreLink}>\r\n              <button>More</button>\r\n            </a>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Jobs;\r\n","import React from \"react\";\r\nimport SectionContainer from \"./../components/SectionContainer/SectionContainer\";\r\nimport Jobs from \"./../components/Jobs/Jobs\";\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <SectionContainer id=\"jobs\" title=\"Jobs\">\r\n      <Jobs />\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport EducationList from \"./EducationList.json\";\r\n\r\nconst Jobs = () => {\r\n  return (\r\n    <div class=\"zd-cards\">\r\n      {EducationList.education.map((item) => {\r\n        return (\r\n          <div class=\"zd-cards-items\">\r\n            <a href={item.href}>\r\n              <img src={item.img} alt={item.imgAlt} />\r\n            </a>\r\n            <h4>{item.majorTitle}</h4>\r\n            <div>\r\n              <i class=\"lni lni-graduation\"></i>\r\n              <span>{item.location}</span>\r\n            </div>\r\n            <div>\r\n              <i class=\"lni lni-book\"></i>\r\n              <span>{item.degree}</span>\r\n            </div>\r\n            <div>\r\n              <i class=\"lni lni-calendar\"></i>\r\n              <span>\r\n                {item.startDate} - {item.endDate}\r\n              </span>\r\n            </div>\r\n            <a href={item.moreLink}>\r\n              <button>More</button>\r\n            </a>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Jobs;\r\n","import React from \"react\";\r\nimport SectionContainer from \"../components/SectionContainer/SectionContainer\";\r\nimport Education from \"../components/Education/Education\";\r\n\r\nconst Educations = () => {\r\n  return (\r\n    <SectionContainer id=\"education\" title=\"Educations\">\r\n      <Education />\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default Educations;\r\n","import React, { useState } from \"react\";\nimport \"./grid.min.css\";\nimport \"./reset.min.css\";\nimport \"./darktheme.css\";\nimport Header from \"./sections/Header\";\nimport CvCard from \"./components/CvCard/CvCard\";\nimport About from \"./sections/About\";\nimport Skills from \"./sections/Skills\";\nimport Jobs from \"./sections/Jobs\";\nimport Educations from \"./sections/Educations\";\n\nconst App = () => {\n  const [theme, setTheme] = useState(\"zd-light-theme\");\n  const changeTheme = () => {\n    setTheme(() => {\n      if (document.getElementById(\"zd-theme\").className === \"zd-light-theme\") {\n        document.getElementById(\"zd-theme\").className = \"zd-dark-theme\";\n      } else document.getElementById(\"zd-theme\").className = \"zd-light-theme\";\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"zd-theme\" className={theme}>\n        <span className=\"zd-darkmode-button\" onClick={changeTheme}>\n          <i class=\"lni lni-night\"></i>\n        </span>\n        <Header />\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-4 zd-fullpage-card\">\n            <CvCard />\n          </div>\n          <div className=\"col-12 col-lg-8\">\n            <About />\n            <Skills />\n            <Jobs />\n            <Educations />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}